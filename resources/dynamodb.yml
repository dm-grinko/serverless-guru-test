PostTable:
  Type: 'AWS::DynamoDB::Table'
  Properties:
    KeySchema:
      - 
        AttributeName: id
        KeyType: HASH
    AttributeDefinitions:
      - 
        AttributeName: id
        AttributeType: S
    ProvisionedThroughput:
      ReadCapacityUnits: 1
      WriteCapacityUnits: 1
    TableName: ${self:custom.postTableName}

UserTable:
  Type: 'AWS::DynamoDB::Table'
  Properties:
    KeySchema:
      - 
        AttributeName: id
        KeyType: HASH
    AttributeDefinitions:
      - 
        AttributeName: id
        AttributeType: S
    ProvisionedThroughput:
      ReadCapacityUnits: 1
      WriteCapacityUnits: 1
    TableName: ${self:custom.userTableName}

AppSyncDynamoDBServiceRole:
  Type: "AWS::IAM::Role"
  Properties:
    RoleName: ${self:custom.role.dynamodb.name}
    AssumeRolePolicyDocument:
      Version: "2012-10-17"
      Statement:
        - 
          Effect: "Allow"
          Principal:
            Service:
              - "appsync.amazonaws.com"
          Action:
            - "sts:AssumeRole"
    Policies:
      - 
        PolicyName: ${self:custom.role.dynamodb.name}-Policy
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - 
              Effect: "Allow"
              Action:
                - "dynamodb:Query"
                - "dynamodb:BatchWriteItem"
                - "dynamodb:GetItem"
                - "dynamodb:DeleteItem"
                - "dynamodb:PutItem"
                - "dynamodb:Scan"
                - "dynamodb:UpdateItem"
                - "dynamodb:BatchGetItem"
              Resource: 
                - "${file(./env.yml):${'${self:provider.stage}.ARN_DB'}}/${self:custom.postTableName}"
                - "${file(./env.yml):${'${self:provider.stage}.ARN_DB'}}/${self:custom.postTableName}/*"
                - "${file(./env.yml):${'${self:provider.stage}.ARN_DB'}}/${self:custom.userTableName}"
                - "${file(./env.yml):${'${self:provider.stage}.ARN_DB'}}/${self:custom.userTableName}/*"

