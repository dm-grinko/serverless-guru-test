UserPool:
  Type: AWS::Cognito::UserPool
  Properties:
    UserPoolName: "${file(./env.yml):${'${self:provider.stage}.COGNITO.USER_POOL.NAME'}}"
    UsernameAttributes:
      - phone_number
    Schema:
      - Name: name
        AttributeDataType: String
        Mutable: true
        Required: false

UserPoolClient:
  Type: AWS::Cognito::UserPoolClient
  Properties:
    ClientName: "${file(./env.yml):${'${self:provider.stage}.COGNITO.USER_POOL_CLIENT.NAME'}}"
    GenerateSecret: false
    UserPoolId:
      Ref: UserPool

IdentityPool:
  Type: AWS::Cognito::IdentityPool
  Properties:
    IdentityPoolName: "${file(./env.yml):${'${self:provider.stage}.COGNITO.IDENTITY_POOL.NAME'}}"
    AllowUnauthenticatedIdentities: true
    CognitoIdentityProviders:
      - ClientId:
          Ref: UserPoolClient
        ProviderName:
          Fn::GetAtt: [UserPool, ProviderName]

CognitoAuthRole:
  Type: AWS::IAM::Role
  Properties:
    RoleName: "${file(./env.yml):${'${self:provider.stage}.COGNITO.AUTH.ROLE_NAME'}}"
    Path: /
    AssumeRolePolicyDocument:
      Version: "2012-10-17"
      Statement:
        - Effect: "Allow"
          Principal:
            Federated: "cognito-identity.amazonaws.com"
          Action:
            - "sts:AssumeRoleWithWebIdentity"
          Condition:
            StringEquals:
              "cognito-identity.amazonaws.com:aud":
                Ref: IdentityPool
            # "ForAnyValue:StringLike":
            #   "cognito-identity.amazonaws.com:amr": authenticated
    Policies:
      - PolicyName: ${file(./env.yml):${'${self:provider.stage}.COGNITO.AUTH.POLICY_NAME'}}
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "mobileanalytics:PutEvents"
                - "cognito-sync:*"
                - "cognito-identity:*"
              Resource: "*"
            - Effect: "Allow"
              Action:
                - appSync:GraphQL
              Resource:
                - ${file(./env.yml):${'${self:provider.stage}.COGNITO.AUTH.RESOURCE'}}

CognitoUnauthRole:
  Type: AWS::IAM::Role
  Properties:
    RoleName: ${file(./env.yml):${'${self:provider.stage}.COGNITO.UNAUTH.ROLE_NAME'}}
    Path: /
    AssumeRolePolicyDocument:
      Version: "2012-10-17"
      Statement:
        - Effect: "Allow"
          Principal:
            Federated: "cognito-identity.amazonaws.com"
          Action:
            - "sts:AssumeRoleWithWebIdentity"
          Condition:
            StringEquals:
              "cognito-identity.amazonaws.com:aud":
                Ref: IdentityPool
            # "ForAnyValue:StringLike":
            #   "cognito-identity.amazonaws.com:amr": unauthenticated
    Policies:
      - PolicyName: ${file(./env.yml):${'${self:provider.stage}.COGNITO.UNAUTH.POLICY_NAME'}}
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "mobileanalytics:PutEvents"
                - "cognito-sync:*"
              Resource: "*"
            - Effect: "Allow"
              Action:
                - appSync:GraphQL
              Resource: 
                - ${file(./env.yml):${'${self:provider.stage}.COGNITO.UNAUTH.RESOURCE'}}

IdentityPoolRoles:
  Type: AWS::Cognito::IdentityPoolRoleAttachment
  Properties:
    IdentityPoolId:
      Ref: IdentityPool
    Roles:
      authenticated: ${file(./env.yml):${'${self:provider.stage}.COGNITO.AUTH.SERVICE_ARN'}}
      unauthenticated: ${file(./env.yml):${'${self:provider.stage}.COGNITO.UNAUTH.SERVICE_ARN'}}